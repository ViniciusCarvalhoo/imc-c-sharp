<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>